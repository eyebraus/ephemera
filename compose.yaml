name: ephemera

services:
  api:
    build:
      args:
        outDir: /out
        workspaceDir: /workspace

      context: .
      dockerfile: api.dockerfile

    command:
      - >-
        npx nx run api:build:development
        && (npx nx run api:test:development || exit 0)
        && mkdir -p /out
        && if [ -n "$( ls -A /out )" ]; then rm -r /out/*; fi
        && cp -r ./dist/* /out
        && node --inspect=0.0.0.0:9229 ./dist/api/main.js

    container_name: ephemera.api

    depends_on:
      - redis

    develop:
      watch:
        # Changes requiring rebuild
        - action: rebuild
          path: ./package.json
        - action: rebuild
          path: ./package-lock.json

        # Changes requiring sync & restart
        - action: sync+restart
          path: ./api
          target: /workspace/api
        - action: sync+restart
          path: ./data
          target: /workspace/data
        - action: sync+restart
          path: ./model
          target: /workspace/model
        - action: sync+restart
          path: ./nx.json
          target: /workspace/nx.json
        - action: sync+restart
          path: ./provide
          target: /workspace/provide
        - action: sync+restart
          path: ./services
          target: /workspace/services
        - action: sync+restart
          path: ./stdlib
          target: /workspace/stdlib
        - action: sync+restart
          path: ./tsconfig.base.json
          target: /workspace/tsconfig.base.json

    ports:
      - 10331:3333
      - 20331:9229

    volumes:
      - ./out:/out

  redis:
    container_name: ephemera.redis

    environment:
      REDIS_ARGS: '--save 30 1 --appendonly yes'

    image: redis/redis-stack-server:latest

    ports:
      - 6379:6379
